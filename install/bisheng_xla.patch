diff --git a/xla/service/cpu/cpu_compiler.cc b/xla/service/cpu/cpu_compiler.cc
index 02fe18c8e4..6bf79a8625 100644
--- a/xla/service/cpu/cpu_compiler.cc
+++ b/xla/service/cpu/cpu_compiler.cc
@@ -242,6 +242,8 @@ limitations under the License.
 #include <annc/kdnn_rewriter.h>
 #endif
 
+#include <annc/bisheng_cpu.h>
+
 namespace {
 
 // We need to explicitly load all the dialects we will involved in emitting the
@@ -852,6 +854,9 @@ Status CpuCompiler::RunHloPassesThroughLayoutAssn(
         &layout_constraints);
   }
 
+  if (getenv("ENABLE_BISHENG_GRAPH_OPT") != NULL)
+    ADD_GRAPH_OPT_PASSES();
+
   return pipeline.Run(module).status();
 }
 
@@ -884,7 +889,10 @@ Status CpuCompiler::RunHloPassesAfterLayoutAssn(
   pipeline.AddPass<ReshapeDecomposer>();
 
   // Add a fusion pass now that layout assignment is done.
-  pipeline.AddPass<CpuInstructionFusion>();
+  if (getenv("ENABLE_BISHENG_GRAPH_FUSION") != NULL)
+    pipeline.AddPass<CpuInstructionFusion>(/*may_duplicate=*/false);
+  else
+    pipeline.AddPass<CpuInstructionFusion>(/*may_duplicate=*/true);
 
   // The LayoutAssignment pass may leave behind kCopy instructions which are
   // duplicate or NOPs, so remove them with algebraic simplification and CSE.
diff --git a/xla/service/cpu/cpu_instruction_fusion.h b/xla/service/cpu/cpu_instruction_fusion.h
index 1e090cb69b..6c5d87eb2e 100644
--- a/xla/service/cpu/cpu_instruction_fusion.h
+++ b/xla/service/cpu/cpu_instruction_fusion.h
@@ -26,8 +26,8 @@ namespace cpu {
 
 class CpuInstructionFusion : public InstructionFusion {
  public:
-  CpuInstructionFusion()
-      : InstructionFusion(CpuInstructionFusion::IsExpensive) {}
+  CpuInstructionFusion(bool may_duplicate)
+      : InstructionFusion(CpuInstructionFusion::IsExpensive, may_duplicate) {}
   ~CpuInstructionFusion() override = default;
 
   using HloPassInterface::Run;
-- 
2.33.0

