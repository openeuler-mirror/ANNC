diff --git a/tensorflow/core/grappler/optimizers/remapper.cc b/tensorflow/core/grappler/optimizers/remapper.cc
index 3c37150f..7b9bf4f0 100644
--- a/tensorflow/core/grappler/optimizers/remapper.cc
+++ b/tensorflow/core/grappler/optimizers/remapper.cc
@@ -913,6 +913,13 @@ Status AddFusedContractionNode(RemapperContext* ctx,
   VLOG(2) << "Fuse " << contraction.op() << " with BiasAdd: "
           << " bias_add=" << bias_add.name()
           << " contraction=" << contraction.name();
+ 
+#if defined(DISABLE_TF_MATMUL_FUSION)
+  if (IsMatMul(contraction)) {
+    VLOG(1) << " Disable MatMul operator fusion in TensorFlow. ";
+    return Status::OK();
+  }
+#endif
 
   NodeDef fused_op;
   fused_op.set_name(bias_add.name());
@@ -952,6 +959,14 @@ Status AddFusedContractionNode(
   const NodeDef& contraction = graph->node(matched.contraction);
   const NodeDef& bias_add = graph->node(matched.bias_add);
   const NodeDef& activation = graph->node(matched.activation);
+ 
+#if defined(DISABLE_TF_MATMUL_FUSION)
+  if (IsMatMul(contraction)) {
+    VLOG(1) << " Disable MatMul operator fusion in TensorFlow. ";
+    return Status::OK();
+  }
+#endif
+
   VLOG(2) << "Fuse " << contraction.op() << " with BiasAdd and "
           << activation.op() << ":"
           << " activation=" << activation.name()

diff --git a/tensorflow/compiler/xla/service/cpu/BUILD b/tensorflow/compiler/xla/service/cpu/BUILD
index 6e0ea613..28550bcd 100644
--- a/tensorflow/compiler/xla/service/cpu/BUILD
+++ b/tensorflow/compiler/xla/service/cpu/BUILD
@@ -98,6 +98,7 @@ cc_library(
     name = "cpu_compiler",
     srcs = ["cpu_compiler.cc"],
     hdrs = ["cpu_compiler.h"],
+    linkopts = ["-lannc"],
     deps = [
         ":compiler_functor",
         ":buffer_info_util",
diff --git a/tensorflow/compiler/xla/service/cpu/cpu_compiler.cc b/tensorflow/compiler/xla/service/cpu/cpu_compiler.cc
index e519cf05..388af2b0 100644
--- a/tensorflow/compiler/xla/service/cpu/cpu_compiler.cc
+++ b/tensorflow/compiler/xla/service/cpu/cpu_compiler.cc
@@ -114,6 +114,10 @@ limitations under the License.
 #include "tensorflow/compiler/xla/xla_data.pb.h"
 #include "tensorflow/core/platform/dynamic_annotations.h"
 
+#if defined(ANNC_ENABLED_KDNN)
+#include <annc/kdnn_rewriter.h>
+#endif
+
 namespace xla {
 namespace cpu {
 using BufferInfo = cpu_function_runtime::BufferInfo;
@@ -233,6 +237,10 @@ class CollectProfileCandidates : public DfsHloVisitorWithDefault {
 
 }  // namespace
 
+#if defined(ANNC_ENABLED_KDNN)
+REGISTER_ALL_GEMM_KERNELS()
+#endif
+
 Status CpuCompiler::RunHloPassesThroughLayoutAssn(
     HloModule* module, bool /*is_aot_compile*/,
     LLVMTargetMachineFeatures* target_machine_features) {
@@ -331,6 +339,10 @@ Status CpuCompiler::RunHloPassesThroughLayoutAssn(
 
   pipeline.AddPass<CpuInstructionFusion>();
 
+#if defined(ANNC_ENABLED_KDNN)
+  pipeline.AddPass<KDnnFusionAfterHloLayoutAssign>();
+#endif
+
   return pipeline.Run(module).status();
 }
 